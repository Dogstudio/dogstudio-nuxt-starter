name: Build & CF Pages Deploy

on:
  push:
    branches:
      - deploy/staging
      - deploy/production

env:
  I18N_DEFAULT_LOCALE: ${{ vars.I18N_DEFAULT_LOCALE }}
  I18N_FALLBACK_LOCALE: ${{ vars.I18N_FALLBACK_LOCALE }}
  NUXT_PUBLIC_MODE: ${{ vars.NUXT_PUBLIC_MODE }}
  NUXT_PUBLIC_PUBLIC_PATH: ${{ vars.NUXT_PUBLIC_PUBLIC_PATH }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/deploy/production' && 'production' || 'preview' }}
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x.x

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ubuntu-latest-node-v16.x.x-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}

      - name: Extract Branch Name
        uses: nelonoel/branch-name@v1.0.1

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build
        env:
          NITRO_PRESET: cloudflare-pages

      - name: Create CF Pages Project
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages project create ${{ github.event.repository.name }} --production-branch=deploy/production
        continue-on-error: true

      - name: Put Secrets
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          secrets: NUXT_PUBLIC_MODE
        env:
          NUXT_PUBLIC_MODE: ${{ vars.NUXT_PUBLIC_MODE }}

      - name: Publish to CF Pages
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages publish .output --project-name=${{ github.event.repository.name }} --branch=${BRANCH_NAME}
